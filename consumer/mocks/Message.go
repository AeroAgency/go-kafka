// Code generated by mockery v2.32.0. DO NOT EDIT.

package mocks

import (
	kafka "github.com/confluentinc/confluent-kafka-go/kafka"
	mock "github.com/stretchr/testify/mock"
)

// Message is an autogenerated mock type for the Message type
type Message struct {
	mock.Mock
}

// Handle provides a mock function with given fields: msg
func (_m *Message) Handle(msg kafka.Message) {
	_m.Called(msg)
}

// NewMessage creates a new instance of Message. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMessage(t interface {
	mock.TestingT
	Cleanup(func())
}) *Message {
	mock := &Message{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
